---
title: "Tidycensus Map"
author: "Ethan Moser"
format: 
  html:
    embed-resources: true
editor: visual
---

```{r}
#| echo: false
#| message: false
#| warning: false

library(tidycensus)
library(ggmap)
library(tidyverse)
library(gt)
library(ggthemes)
library(plotly)
library(sf)
library(ggplot2)
library(osmdata)
library(janitor)
library(viridis, quietly = TRUE)



## Load the API key
api_key <- Sys.getenv("CEN_API_KEY")
census_api_key(api_key)




#Pull OSM data
mn.box           <- osmdata::getbb("minnesota")
hennepin.box     <- osmdata::getbb("hennepin")
hennepin.outline <- osmdata::getbb("hennepin", format_out = "polygon")[[1]] %>%
  as_tibble() %>%
  rename(longitude = V1, latitude = V2)


#Get map from ggmap and add Hennepin county outline box
mn_base.map <- get_map(
  location = hennepin.box,
  source   = "stamen",
  maptype  = "terrain",
  crop = TRUE
)


hennepin_base.gg <- ggmap(mn_base.map) +
  geom_polygon(data = hennepin.outline, aes(x = longitude, y = latitude), colour = "black", size = 1.6, alpha = 0.1) +
  theme_map() +
  theme(
    plot.title   = element_text(size  = 16,
                                hjust = 0.5),
    legend.text  = element_text(size = 16),
    legend.title = element_text(size = 16),
    legend.position = "right"
  )




#Get Census data for Median gross rent on as a percentage of household income and monthly housing costs 
#AKA How much of households income goes to rent alone? 
options(tigris_use_cache = TRUE)


mn_rentper.df <- get_acs(
  geography = "tract",
  variables = c("B25071_001E", "B25077_001E", "B25105_001E"), #Code for median income
  state     = "MN",
  county    = "Hennepin",
  year      = 2020,
  geometry  = TRUE,
  cb        = FALSE
) %>%
  janitor::clean_names()

final_census1.df <- 
  mn_rentper.df %>%
  pivot_wider(names_from = "variable", 
              values_from = c("estimate","moe"))

final_census.df <- final_census1.df %>%
  mutate(PerRent = estimate_B25071_001/100,
         Housing_cost = estimate_B25105_001, 
         Housing_value = estimate_B25077_001, 
         value_cost_ratio = round(estimate_B25077_001/estimate_B25105_001,1)
         
  )




#Add a text label to mn_income.df
mn_rent_plotly.df <- final_census.df %>%
  mutate(
    tract      = str_split(name, ",") %>%
      map_chr(1) %>%
      str_remove("Census Tract "),
    text_label = str_c(
      "Tract: ",
      tract,
      "\nPercent Income Towards Housing: ",
      scales::percent(PerRent),
      "\nHousing Value: ", 
      scales::dollar(Housing_value),
      "\nMedian Monthly Housing Cost: ",
      scales::dollar(Housing_cost),
      "\nHousing Value|Cost Ratio: ",
      value_cost_ratio
    )
  )
```

## TidyCensus Map

```{r}
#| echo: false
#| message: false
#| warning: false


#Generate the ggplot
coord_ggmap <- st_crs(hennepin_base.gg) 
coord_sf    <- st_crs(mn_rent_plotly.df) 




PercentRent.gg <- hennepin_base.gg + 
  geom_sf(data = mn_rent_plotly.df, 
          aes(fill = Housing_value, text = text_label),
          colour = "black", size = 0.5,
          inherit.aes = FALSE) + 
  labs(title = "Hennepin County: Household Cost, Value, and Rent Info") + 
  scale_fill_viridis_c("Housing Value", labels = scales::dollar)+
  theme_map() +
  theme(
    plot.title   = element_text(size  = 12,
                                hjust = 0.5),
    legend.text  = element_text(size = 10),
    legend.title = element_text(size = 15),
    legend.position = "bottomright"
  )


ggplotly(PercentRent.gg,
         tooltip = "text",
         height  = 600,
         width   = 650) %>%
  style(hoveron = "fills")



```
